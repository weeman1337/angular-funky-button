{"version":3,"sources":["angular-funky-button.min.js"],"names":["angular","module","provider","self","this","dismissConfirm","dismissSuccess","dismissError","classes","$get","options","directive","FunkyButtonLinker","priority","restrict","scope","funkyButton","fubuClick","transclude","link","controller","$scope","$element","FunkyButtonStateHelper","$timeout","$log","onWorkSuccess","hasSuccessElement","fubuStateHelper","setSuccess","$parent","urDismissSuccessWatch","$watch","setDefault","successTimeoutPromise","onWorkError","hasErrorElement","setError","urDismissErrorWatch","clickHandlerDefault","hasConfirmElement","clickHandlerDefaultWithConfirmElement","clickHandlerDefaultWithoutConfirmElement","setConfirm","confirmTimeoutPromise","clickHandlerConfirm","undefined","cancel","setWorking","result","then","Error","errorToDefault","errorTimeoutPromise","clickHandlerError","successToDefault","clickHandlerSuccess","clickHandlerWorking","onClick","debug","fubu","state","copy","click","showDefault","showConfirm","showWorking","showSuccess","showError","rawClickHandler","$apply","factory","$compile","FunkyButtonOptionsHelper","$parse","capitalizeFirstLetter","string","charAt","toUpperCase","slice","linkFunkyElement","element","funkyElement","funkyType","wrapperElement","nodeName","attr","hasAttribute","getAttribute","removeAttribute","append","attributes","addClass","clone","forEach","nodeType","mergeOptions","bind","blur","removeClass","confirm","working","success","error","defaults","mergedOptions","value","prop"],"mappings":"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","file":"angular-funky-button.min.js","sourcesContent":["\nangular.module('angular-funky-button', []);\n\nangular.module('angular-funky-button').provider(\n    'funkyButton',\n    function FunkyButtonProvider() {\n\n        var self = this;\n\n        this.dismissConfirm = 5000;\n        this.dismissSuccess = 2500;\n        this.dismissError = 2500;\n\n        this.classes = {\n\n        };\n\n        this.$get = [\n            function() {\n                return {\n                    options: {\n                        dismissConfirm: self.dismissConfirm,\n                        dismissSuccess: self.dismissSuccess,\n                        dismissError: self.dismissError,\n                        classes: self.classes\n                    }\n                };\n            }\n        ];\n    }\n);\n\n\nangular.module('angular-funky-button').directive(\n    'funkyButton',\n    [\n        'FunkyButtonLinker',\n        function(FunkyButtonLinker) {\n            return {\n                priority: 1,\n                restrict: 'A',\n                scope: {\n                    funkyButton: '=funkyButton',\n                    fubuClick: '&fubuClick'\n                },\n                transclude: true,\n                link: FunkyButtonLinker,\n                controller: 'FunkyButtonController'\n            };\n        }\n    ]\n);\n\n\nangular.module('angular-funky-button').controller(\n    'FunkyButtonController',\n    [\n        '$scope', '$element', 'funkyButton', 'FunkyButtonStateHelper', '$timeout', '$log',\n        function($scope, $element, funkyButton, FunkyButtonStateHelper, $timeout, $log) {\n            $log.debug('fubu â†’ controller');\n\n            $scope.options = angular.copy(funkyButton.options);\n\n            $scope.fubu = {};\n\n            if ($scope.funkyButton !== undefined) {\n                $scope.funkyButton = $scope.fubu;\n            }\n\n            $scope.fubu.dismissError = function() {\n                if (errorTimeoutPromise !== undefined) {\n                    $timeout.cancel(errorTimeoutPromise);\n                }\n                $scope.fubuStateHelper.setDefault();\n            };\n\n            $scope.fubu.dismissSuccess = function() {\n                if (successTimeoutPromise !== undefined) {\n                    $timeout.cancel(successTimeoutPromise);\n                }\n                $scope.fubuStateHelper.setDefault();\n            };\n\n            $scope.fubu.click = function() {\n                onClick();\n            };\n\n            $scope.showDefault = false;\n            $scope.showConfirm = false;\n            $scope.showWorking = false;\n            $scope.showSuccess = false;\n            $scope.showError = false;\n\n            $scope.fubu.state = 'default';\n\n            var confirmTimeoutPromise;\n\n            var successTimeoutPromise;\n\n            var errorTimeoutPromise;\n\n            $scope.fubuStateHelper = new FunkyButtonStateHelper($scope, $element, $scope.options);\n\n            var urDismissSuccessWatch;\n            function onWorkSuccess() {\n                if ($scope.options.hasSuccessElement === true) {\n                    $scope.fubuStateHelper.setSuccess();\n\n                    var dismissSuccess = $scope.options.dismissSuccess;\n                    if (typeof dismissSuccess === 'function') {\n                        dismissSuccess = dismissSuccess($scope.$parent);\n                    }\n\n                    if (dismissSuccess === false) {\n                        urDismissSuccessWatch = $scope.$watch(function() {  return $scope.options.dismissSuccess($scope.$parent) }, function(dismissSuccess) {\n                            if (dismissSuccess === true) {\n                                urDismissSuccessWatch();\n                                $scope.fubuStateHelper.setDefault();\n                            }\n                        });\n                    } else if (dismissSuccess === true) {\n                        $scope.fubuStateHelper.setDefault();\n                    } else if (dismissSuccess === 0) {\n\n                    } else {\n                        successTimeoutPromise = $timeout(function () {\n                            $scope.fubuStateHelper.setDefault();\n                        }, $scope.options.dismissSuccess);\n                    }\n\n                } else {\n                    $scope.fubuStateHelper.setDefault();\n                }\n            }\n\n            var urDismissErrorWatch;\n            function onWorkError() {\n                if ($scope.options.hasErrorElement === true) {\n                    $scope.fubuStateHelper.setError();\n\n                    var dismissError = $scope.options.dismissError;\n                    if (typeof dismissError === 'function') {\n                        dismissError = dismissError($scope.$parent);\n                    }\n\n                    if (dismissError === false) {\n                        urDismissErrorWatch = $scope.$watch(function() {  return $scope.options.dismissError($scope.$parent) }, function(dismissError) {\n                            if (dismissError === true) {\n                                urDismissErrorWatch();\n                                $scope.fubuStateHelper.setDefault();\n                            }\n                        });\n                    } else if (dismissError === true) {\n                        $scope.fubuStateHelper.setDefault();\n                    } else if (dismissError === 0) {\n\n                    } else {\n                        successTimeoutPromise = $timeout(function () {\n                            $scope.fubuStateHelper.setDefault();\n                        }, $scope.options.dismissError);\n                    }\n\n                } else {\n                    $scope.fubuStateHelper.setDefault();\n                }\n            }\n\n            function clickHandlerDefault() {\n                if ($scope.options.hasConfirmElement === true) {\n                    clickHandlerDefaultWithConfirmElement();\n                } else {\n                    clickHandlerDefaultWithoutConfirmElement();\n                }\n            }\n\n            function clickHandlerDefaultWithConfirmElement() {\n                $scope.fubuStateHelper.setConfirm();\n\n                if ($scope.options.dismissConfirm !== 0 && $scope.options.dismissConfirm !== false) {\n                    confirmTimeoutPromise = $timeout(function() {\n                        $scope.fubuStateHelper.setDefault();\n                    }, $scope.options.dismissConfirm);\n                }\n            }\n\n            function clickHandlerDefaultWithoutConfirmElement() {\n                fubuClick();\n            }\n\n            function clickHandlerConfirm() {\n                if (confirmTimeoutPromise !== undefined) {\n                    $timeout.cancel(confirmTimeoutPromise);\n                }\n                fubuClick();\n            }\n\n            function fubuClick() {\n                $scope.fubuStateHelper.setWorking();\n                var result = $scope.fubuClick();\n                if (result === false) {\n                    onWorkError();\n                } else if (result === true) {\n                    onWorkSuccess();\n                } else if (result.then !== undefined && typeof result.then === 'function') {\n                    result.then(onWorkSuccess, onWorkError);\n                } else {\n                    throw new Error('fubu-click function must return true, false or a promise');\n                }\n            }\n\n            function errorToDefault() {\n                if (errorTimeoutPromise !== undefined) {\n                    $timeout.cancel(errorTimeoutPromise);\n                }\n                $scope.fubuStateHelper.setDefault();\n            }\n\n            function clickHandlerError() {\n                if ($scope.options.dismissError !== undefined && typeof $scope.options.dismissError === 'function') {\n                    var dismissError = $scope.options.dismissError($scope.$parent);\n                    if (dismissError !== false) {\n                        errorToDefault();\n                    }\n                } else {\n                    if ($scope.options.dismissError !== false) {\n                        errorToDefault();\n                    }\n                }\n            }\n\n            function successToDefault() {\n                if (successTimeoutPromise !== undefined) {\n                    $timeout.cancel(successTimeoutPromise);\n                }\n                $scope.fubuStateHelper.setDefault();\n            }\n\n            function clickHandlerSuccess() {\n                if ($scope.options.dismissSuccess !== undefined && typeof $scope.options.dismissSuccess === 'function') {\n                    var dismissSuccess = $scope.options.dismissSuccess($scope.$parent);\n                    if (dismissSuccess !== false) {\n                        successToDefault();\n                    }\n                } else {\n                    if ($scope.options.dismissSuccess !== false) {\n                        successToDefault();\n                    }\n                }\n            }\n\n            function clickHandlerWorking() {\n            }\n\n            function onClick() {\n                $log.debug('fubu â†’ onClick()');\n\n                switch ($scope.fubu.state) {\n                    case 'default':\n                        clickHandlerDefault();\n                        break;\n                    case 'confirm':\n                        clickHandlerConfirm();\n                        break;\n                    case 'error':\n                        clickHandlerError();\n                        break;\n                    case 'success':\n                        clickHandlerSuccess();\n                        break;\n                    case 'working':\n                        clickHandlerWorking();\n                        break;\n                }\n\n            }\n\n            $scope.rawClickHandler = function(event) {\n                $scope.$apply(\n                    function(scope) {\n                        onClick();\n                    }\n                )\n            }\n        }\n    ]\n);\n\nangular.module('angular-funky-button').factory(\n    'FunkyButtonLinker',\n    [\n        '$compile', 'funkyButton', 'FunkyButtonOptionsHelper', '$parse', '$log',\n        function($compile, funkyButton, FunkyButtonOptionsHelper, $parse, $log) {\n\n            function capitalizeFirstLetter(string) {\n                return string.charAt(0).toUpperCase() + string.slice(1);\n            }\n\n            function linkFunkyElement(scope, element, funkyElement, funkyType) {\n                var wrapperElement = angular.element('<' + funkyElement.nodeName + '></' + funkyElement.nodeName + '>');\n                wrapperElement.attr('ng-show', 'show' + capitalizeFirstLetter(funkyType) + ' === true');\n                $compile(wrapperElement)(scope);\n\n                scope.options['has' + capitalizeFirstLetter(funkyType) + 'Element'] = true;\n\n                if (funkyElement.hasAttribute('fubu-dismiss') === true) {\n                    scope.options['dismiss' + capitalizeFirstLetter(funkyType)] = $parse(funkyElement.getAttribute('fubu-dismiss'));\n                    funkyElement.removeAttribute('fubu-dismiss');\n                }\n\n                if (funkyElement.hasAttribute('fubu-class') === true) {\n                    scope.options.classes[funkyType] = funkyElement.getAttribute('fubu-class');\n                    scope.options['has' + capitalizeFirstLetter(funkyType) + 'Element'] = true;\n                    funkyElement.removeAttribute('fubu-class');\n                }\n\n                funkyElement.removeAttribute('fubu-' + funkyType);\n                wrapperElement.append(funkyElement);\n\n                element.append(wrapperElement);\n            }\n\n            return function(scope, element, attributes, controller, transclude) {\n                $log.debug('FunkyButtonLinker');\n\n                element.addClass('funky-button');\n\n                transclude(function(clone) {\n                    angular.forEach(clone, function(funkyElement) {\n\n                        if (funkyElement.nodeType === 1) {\n                            if (funkyElement.hasAttribute('fubu-default') === true) {\n                                linkFunkyElement(scope, element, funkyElement, 'default');\n                            } else if (funkyElement.hasAttribute('fubu-confirm') === true) {\n                                linkFunkyElement(scope, element, funkyElement, 'confirm');\n                            } else if (funkyElement.hasAttribute('fubu-working') === true) {\n                                linkFunkyElement(scope, element, funkyElement, 'working');\n                            } else if (funkyElement.hasAttribute('fubu-success') === true) {\n                                linkFunkyElement(scope, element, funkyElement, 'success');\n                            } else if (funkyElement.hasAttribute('fubu-error') === true) {\n                                linkFunkyElement(scope, element, funkyElement, 'error');\n                            }\n                        }\n\n                    });\n                });\n\n                scope.options = FunkyButtonOptionsHelper.mergeOptions(funkyButton.options, scope.options);\n\n                scope.fubuStateHelper.setDefault();\n\n                element.bind('click', scope.rawClickHandler);\n            }\n        }\n    ]\n);\n\n\nangular.module('angular-funky-button').factory(\n    'FunkyButtonStateHelper',\n    [\n        function() {\n\n            function FunkyButtonStateHelper($scope, $element, options) {\n                this.setDefault = function() {\n                    $element[0].blur();\n\n                    $scope.fubu.state = 'default';\n\n                    $element.removeClass(options.classes.confirm);\n                    $element.removeClass('fubu-confirm');\n                    $element.removeClass(options.classes.working);\n                    $element.removeClass('fubu-working');\n                    $element.removeClass(options.classes.success);\n                    $element.removeClass('fubu-success');\n                    $element.removeClass(options.classes.error);\n                    $element.removeClass('fubu-error');\n\n                    $element.addClass(options.classes.default);\n                    $element.addClass('fubu-default');\n\n                    $scope.showDefault = true;\n                    $scope.showConfirm = false;\n                    $scope.showWorking = false;\n                    $scope.showSuccess = false;\n                    $scope.showError = false;\n                };\n\n                this.setConfirm = function() {\n                    $element[0].blur();\n\n                    $scope.fubu.state = 'confirm';\n\n                    $element.removeClass(options.classes.default);\n                    $element.removeClass('fubu-default');\n                    $element.removeClass(options.classes.working);\n                    $element.removeClass('fubu-working');\n                    $element.removeClass(options.classes.success);\n                    $element.removeClass('fubu-success');\n                    $element.removeClass(options.classes.error);\n                    $element.removeClass('fubu-error');\n\n                    $element.addClass(options.classes.confirm);\n                    $element.addClass('fubu-confirm');\n\n                    $scope.showDefault = false;\n                    $scope.showConfirm = true;\n                    $scope.showWorking = false;\n                    $scope.showSuccess = false;\n                    $scope.showError = false;\n                };\n\n                this.setWorking = function() {\n                    $element[0].blur();\n\n                    $scope.fubu.state = 'working';\n\n                    $element.removeClass(options.classes.default);\n                    $element.removeClass('fubu-default');\n                    $element.removeClass(options.classes.confirm);\n                    $element.removeClass('fubu-confirm');\n                    $element.removeClass(options.classes.success);\n                    $element.removeClass('fubu-success');\n                    $element.removeClass(options.classes.error);\n                    $element.removeClass('fubu-error');\n\n                    $element.addClass(options.classes.working);\n                    $element.addClass('fubu-working');\n\n                    $scope.showDefault = false;\n                    $scope.showConfirm = false;\n                    $scope.showWorking = true;\n                    $scope.showSuccess = false;\n                    $scope.showError = false;\n                };\n\n                this.setSuccess = function() {\n                    $element[0].blur();\n\n                    $scope.fubu.state = 'success';\n\n                    $element.removeClass(options.classes.default);\n                    $element.removeClass('fubu-default');\n                    $element.removeClass(options.classes.confirm);\n                    $element.removeClass('fubu-confirm');\n                    $element.removeClass(options.classes.working);\n                    $element.removeClass('fubu-working');\n                    $element.removeClass(options.classes.error);\n                    $element.removeClass('fubu-error');\n\n                    $element.addClass(options.classes.success);\n                    $element.addClass('fubu-success');\n\n                    $scope.showDefault = false;\n                    $scope.showConfirm = false;\n                    $scope.showWorking = false;\n                    $scope.showSuccess = true;\n                    $scope.showError = false;\n                };\n\n                this.setError = function() {\n                    $element[0].blur();\n\n                    $scope.fubu.state = 'error';\n\n                    $element.removeClass(options.classes.default);\n                    $element.removeClass('fubu-default');\n                    $element.removeClass(options.classes.confirm);\n                    $element.removeClass('fubu-confirm');\n                    $element.removeClass(options.classes.working);\n                    $element.removeClass('fubu-working');\n                    $element.removeClass(options.classes.success);\n                    $element.removeClass('fubu-success');\n\n                    $element.addClass(options.classes.error);\n                    $element.addClass('fubu-error');\n\n                    $scope.showDefault = false;\n                    $scope.showConfirm = false;\n                    $scope.showWorking = false;\n                    $scope.showSuccess = false;\n                    $scope.showError = true;\n                }\n            }\n\n            return FunkyButtonStateHelper;\n        }\n    ]\n);\n\n\nangular.module('angular-funky-button').factory(\n    'FunkyButtonOptionsHelper',\n    function() {\n        return {\n            mergeOptions: function(defaults, options) {\n                var self = this;\n\n                var mergedOptions = angular.copy(defaults);\n\n                if (typeof options === 'object') {\n                    angular.forEach(options, function(value, prop) {\n                        if (typeof prop === 'object') {\n                            mergedOptions[prop] = self.mergeOptions(defaults[prop], prop);\n                        } else {\n                            mergedOptions[prop] = value;\n                        }\n                    });\n                }\n\n                return mergedOptions;\n            }\n        }\n    }\n);\n"],"sourceRoot":"/source/"}