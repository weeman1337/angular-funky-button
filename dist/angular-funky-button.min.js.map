{"version":3,"sources":["angular-funky-button.min.js"],"names":["angular","module","provider","self","this","dismissConfirm","dismissSuccess","dismissError","setWorkingTimeout","classes","$get","options","funkyButton","FunkyButtonLinker","priority","restrict","scope","fubuClick","transclude","link","controller","directive","$inject","FunkyButtonController","$scope","$element","FunkyButtonStateHelper","$timeout","onWorkSuccess","cancelSetWorkingTimeout","hasSuccessElement","fubuStateHelper","setSuccess","$parent","urDismissSuccessWatch","$watch","setDefault","successTimeoutPromise","undefined","setWorkingTimeoutPromise","cancel","onWorkError","hasErrorElement","setError","urDismissErrorWatch","clickHandlerDefault","hasConfirmElement","clickHandlerDefaultWithConfirmElement","clickHandlerDefaultWithoutConfirmElement","setConfirm","confirmTimeoutPromise","clickHandlerConfirm","setWorking","result","then","errorToDefault","errorTimeoutPromise","clickHandlerError","successToDefault","clickHandlerSuccess","clickHandlerWorking","onClick","fubu","state","copy","click","showDefault","showConfirm","showWorking","showSuccess","showError","rawClickHandler","$apply","$compile","$parse","capitalizeFirstLetter","string","charAt","toUpperCase","slice","linkFunkyElement","element","funkyElement","funkyType","wrapperElement","nodeName","attr","hasAttribute","getAttribute","removeAttribute","append","attributes","addClass","clone","forEach","nodeType","merge","bind","factory","blur","removeClass","confirm","working","success","error"],"mappings":"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","file":"angular-funky-button.min.js","sourcesContent":["(function() {\n    'use strict';\n\n    /**\n     * \"angular-funky-button\" module definition.\n     */\n    angular.module('angular-funky-button', []);\n\n    angular.module('angular-funky-button').provider(\n        'funkyButton',\n        function FunkyButtonProvider() {\n\n            var self = this;\n\n            this.dismissConfirm = 5000;\n            this.dismissSuccess = 2500;\n            this.dismissError = 2500;\n            this.setWorkingTimeout = 100;\n\n            this.classes = {\n\n            };\n\n            this.$get = [\n                function() {\n                    return {\n                        options: {\n                            dismissConfirm: self.dismissConfirm,\n                            dismissSuccess: self.dismissSuccess,\n                            dismissError: self.dismissError,\n                            setWorkingTimeout: self.setWorkingTimeout,\n                            classes: self.classes\n                        }\n                    };\n                }\n            ];\n        }\n    );\n})();\n\n(function() {\n    'use strict';\n\n    /**\n     * @desc Defines the \"funky-button\" directive.\n     */\n    angular\n        .module('angular-funky-button')\n        .directive('funkyButton', funkyButton);\n\n    funkyButton.$inject = ['FunkyButtonLinker'];\n\n    function funkyButton(FunkyButtonLinker) {\n        return {\n            priority: 1,\n            restrict: 'A',\n            scope: {\n                funkyButton: '=funkyButton',\n                fubuClick: '&fubuClick'\n            },\n            transclude: true,\n            link: FunkyButtonLinker,\n            controller: 'FunkyButtonController'\n        };\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('angular-funky-button')\n        .controller('FunkyButtonController', FunkyButtonController);\n\n    FunkyButtonController.$inject = ['$scope', '$element', 'funkyButton', 'FunkyButtonStateHelper', '$timeout'];\n\n    /**\n     * Provides the controller logic of funky-button.\n     *\n     * @param $scope\n     * @param $element\n     * @param funkyButton\n     * @param FunkyButtonStateHelper\n     * @param $timeout\n     * @constructor\n     */\n    function FunkyButtonController($scope, $element, funkyButton, FunkyButtonStateHelper, $timeout) {\n        $scope.options = angular.copy(funkyButton.options);\n\n        $scope.fubu = {};\n\n        if ($scope.funkyButton !== undefined) {\n            $scope.funkyButton = $scope.fubu;\n        }\n\n        $scope.fubu.dismissError = function() {\n            if (errorTimeoutPromise !== undefined) {\n                $timeout.cancel(errorTimeoutPromise);\n            }\n            $scope.fubuStateHelper.setDefault();\n        };\n\n        $scope.fubu.dismissSuccess = function() {\n            if (successTimeoutPromise !== undefined) {\n                $timeout.cancel(successTimeoutPromise);\n            }\n            $scope.fubuStateHelper.setDefault();\n        };\n\n        $scope.fubu.click = function() {\n            onClick();\n        };\n\n        $scope.showDefault = false;\n        $scope.showConfirm = false;\n        $scope.showWorking = false;\n        $scope.showSuccess = false;\n        $scope.showError = false;\n\n        $scope.fubu.state = 'default';\n\n        var confirmTimeoutPromise;\n\n        var successTimeoutPromise;\n\n        var errorTimeoutPromise;\n\n        $scope.fubuStateHelper = new FunkyButtonStateHelper($scope, $element, $scope.options);\n\n        var urDismissSuccessWatch;\n        function onWorkSuccess() {\n            cancelSetWorkingTimeout();\n\n            if ($scope.options.hasSuccessElement === true) {\n                $scope.fubuStateHelper.setSuccess();\n\n                var dismissSuccess = $scope.options.dismissSuccess;\n                if (typeof dismissSuccess === 'function') {\n                    dismissSuccess = dismissSuccess($scope.$parent);\n                }\n\n                if (dismissSuccess === false) {\n                    urDismissSuccessWatch = $scope.$watch(function() { return $scope.options.dismissSuccess($scope.$parent); }, function(dismissSuccess) {\n                        if (dismissSuccess === true) {\n                            urDismissSuccessWatch();\n                            $scope.fubuStateHelper.setDefault();\n                        }\n                    });\n                } else if (dismissSuccess === true) {\n                    $scope.fubuStateHelper.setDefault();\n                } else if (dismissSuccess === 0) {\n\n                } else {\n                    successTimeoutPromise = $timeout(function () {\n                        $scope.fubuStateHelper.setDefault();\n                    }, $scope.options.dismissSuccess);\n                }\n\n            } else {\n                $scope.fubuStateHelper.setDefault();\n            }\n        }\n\n        function cancelSetWorkingTimeout() {\n            if (setWorkingTimeoutPromise !== undefined) {\n                $timeout.cancel(setWorkingTimeoutPromise);\n            }\n        }\n\n        var urDismissErrorWatch;\n        function onWorkError() {\n            cancelSetWorkingTimeout();\n\n            if ($scope.options.hasErrorElement === true) {\n                $scope.fubuStateHelper.setError();\n\n                var dismissError = $scope.options.dismissError;\n                if (typeof dismissError === 'function') {\n                    dismissError = dismissError($scope.$parent);\n                }\n\n                if (dismissError === false) {\n                    urDismissErrorWatch = $scope.$watch(function() { return $scope.options.dismissError($scope.$parent); }, function(dismissError) {\n                        if (dismissError === true) {\n                            urDismissErrorWatch();\n                            $scope.fubuStateHelper.setDefault();\n                        }\n                    });\n                } else if (dismissError === true) {\n                    $scope.fubuStateHelper.setDefault();\n                } else if (dismissError === 0) {\n\n                } else {\n                    successTimeoutPromise = $timeout(function () {\n                        $scope.fubuStateHelper.setDefault();\n                    }, $scope.options.dismissError);\n                }\n\n            } else {\n                $scope.fubuStateHelper.setDefault();\n            }\n        }\n\n        function clickHandlerDefault() {\n            if ($scope.options.hasConfirmElement === true) {\n                clickHandlerDefaultWithConfirmElement();\n            } else {\n                clickHandlerDefaultWithoutConfirmElement();\n            }\n        }\n\n        function clickHandlerDefaultWithConfirmElement() {\n            $scope.fubuStateHelper.setConfirm();\n\n            if ($scope.options.dismissConfirm !== 0 && $scope.options.dismissConfirm !== false) {\n                confirmTimeoutPromise = $timeout(function() {\n                    $scope.fubuStateHelper.setDefault();\n                }, $scope.options.dismissConfirm);\n            }\n        }\n\n        function clickHandlerDefaultWithoutConfirmElement() {\n            fubuClick();\n        }\n\n        function clickHandlerConfirm() {\n            if (confirmTimeoutPromise !== undefined) {\n                $timeout.cancel(confirmTimeoutPromise);\n            }\n            fubuClick();\n        }\n\n        var setWorkingTimeoutPromise;\n        function fubuClick() {\n\n            setWorkingTimeoutPromise = $timeout($scope.fubuStateHelper.setWorking, $scope.options.setWorkingTimeout);\n\n            var result = $scope.fubuClick();\n            if (result === false) {\n                onWorkError();\n            } else if (typeof result === 'object' && result.then !== undefined && typeof result.then === 'function') {\n                result.then(onWorkSuccess, onWorkError);\n            } else {\n                onWorkSuccess();\n            }\n        }\n\n        function errorToDefault() {\n            if (errorTimeoutPromise !== undefined) {\n                $timeout.cancel(errorTimeoutPromise);\n            }\n            $scope.fubuStateHelper.setDefault();\n        }\n\n        function clickHandlerError() {\n            if ($scope.options.dismissError !== undefined && typeof $scope.options.dismissError === 'function') {\n                var dismissError = $scope.options.dismissError($scope.$parent);\n                if (dismissError !== false) {\n                    errorToDefault();\n                }\n            } else {\n                if ($scope.options.dismissError !== false) {\n                    errorToDefault();\n                }\n            }\n        }\n\n        function successToDefault() {\n            if (successTimeoutPromise !== undefined) {\n                $timeout.cancel(successTimeoutPromise);\n            }\n            $scope.fubuStateHelper.setDefault();\n        }\n\n        function clickHandlerSuccess() {\n            if ($scope.options.dismissSuccess !== undefined && typeof $scope.options.dismissSuccess === 'function') {\n                var dismissSuccess = $scope.options.dismissSuccess($scope.$parent);\n                if (dismissSuccess !== false) {\n                    successToDefault();\n                }\n            } else {\n                if ($scope.options.dismissSuccess !== false) {\n                    successToDefault();\n                }\n            }\n        }\n\n        function clickHandlerWorking() {\n        }\n\n        function onClick() {\n            switch ($scope.fubu.state) {\n                case 'default':\n                    clickHandlerDefault();\n                    break;\n                case 'confirm':\n                    clickHandlerConfirm();\n                    break;\n                case 'error':\n                    clickHandlerError();\n                    break;\n                case 'success':\n                    clickHandlerSuccess();\n                    break;\n                case 'working':\n                    clickHandlerWorking();\n                    break;\n            }\n\n        }\n\n        $scope.rawClickHandler = function() {\n            $scope.$apply(\n                function() {\n                    onClick();\n                }\n            );\n        };\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('angular-funky-button')\n        .factory('FunkyButtonLinker', FunkyButtonLinker);\n\n    FunkyButtonLinker.$inject = ['$compile', 'funkyButton', '$parse'];\n\n    /**\n     * Contains all DOM manipulations of the funky-button directive.\n     *\n     * @param $compile\n     * @param funkyButton\n     * @param $parse\n     * @returns {Function}\n     * @constructor\n     */\n    function FunkyButtonLinker($compile, funkyButton, $parse) {\n        function capitalizeFirstLetter(string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n\n        function linkFunkyElement(scope, element, funkyElement, funkyType) {\n            var wrapperElement = angular.element('<' + funkyElement.nodeName + '></' + funkyElement.nodeName + '>');\n            wrapperElement.attr('ng-show', 'show' + capitalizeFirstLetter(funkyType) + ' === true');\n            $compile(wrapperElement)(scope);\n\n            scope.options['has' + capitalizeFirstLetter(funkyType) + 'Element'] = true;\n\n            if (funkyElement.hasAttribute('fubu-dismiss') === true) {\n                scope.options['dismiss' + capitalizeFirstLetter(funkyType)] = $parse(funkyElement.getAttribute('fubu-dismiss'));\n                funkyElement.removeAttribute('fubu-dismiss');\n            }\n\n            if (funkyElement.hasAttribute('fubu-class') === true) {\n                scope.options.classes[funkyType] = funkyElement.getAttribute('fubu-class');\n                scope.options['has' + capitalizeFirstLetter(funkyType) + 'Element'] = true;\n                funkyElement.removeAttribute('fubu-class');\n            }\n\n            funkyElement.removeAttribute('fubu-' + funkyType);\n            wrapperElement.append(funkyElement);\n\n            element.append(wrapperElement);\n        }\n\n        return function(scope, element, attributes, controller, transclude) {\n            element.addClass('funky-button');\n\n            transclude(function(clone) {\n                angular.forEach(clone, function(funkyElement) {\n\n                    if (funkyElement.nodeType === 1) {\n                        if (funkyElement.hasAttribute('fubu-default') === true) {\n                            linkFunkyElement(scope, element, funkyElement, 'default');\n                        } else if (funkyElement.hasAttribute('fubu-confirm') === true) {\n                            linkFunkyElement(scope, element, funkyElement, 'confirm');\n                        } else if (funkyElement.hasAttribute('fubu-working') === true) {\n                            linkFunkyElement(scope, element, funkyElement, 'working');\n                        } else if (funkyElement.hasAttribute('fubu-success') === true) {\n                            linkFunkyElement(scope, element, funkyElement, 'success');\n                        } else if (funkyElement.hasAttribute('fubu-error') === true) {\n                            linkFunkyElement(scope, element, funkyElement, 'error');\n                        }\n                    }\n                });\n            });\n\n            angular.merge(scope.options, funkyButton.options);\n            scope.fubuStateHelper.setDefault();\n\n            element.bind('click', scope.rawClickHandler);\n        };\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular.module('angular-funky-button').factory(\n        'FunkyButtonStateHelper',\n        [\n            function() {\n\n                function FunkyButtonStateHelper($scope, $element, options) {\n                    this.setDefault = function() {\n                        $element[0].blur();\n\n                        $scope.fubu.state = 'default';\n\n                        $element.removeClass(options.classes.confirm);\n                        $element.removeClass('fubu-confirm');\n                        $element.removeClass(options.classes.working);\n                        $element.removeClass('fubu-working');\n                        $element.removeClass(options.classes.success);\n                        $element.removeClass('fubu-success');\n                        $element.removeClass(options.classes.error);\n                        $element.removeClass('fubu-error');\n\n                        $element.addClass(options.classes.default);\n                        $element.addClass('fubu-default');\n\n                        $scope.showDefault = true;\n                        $scope.showConfirm = false;\n                        $scope.showWorking = false;\n                        $scope.showSuccess = false;\n                        $scope.showError = false;\n                    };\n\n                    this.setConfirm = function() {\n                        $element[0].blur();\n\n                        $scope.fubu.state = 'confirm';\n\n                        $element.removeClass(options.classes.default);\n                        $element.removeClass('fubu-default');\n                        $element.removeClass(options.classes.working);\n                        $element.removeClass('fubu-working');\n                        $element.removeClass(options.classes.success);\n                        $element.removeClass('fubu-success');\n                        $element.removeClass(options.classes.error);\n                        $element.removeClass('fubu-error');\n\n                        $element.addClass(options.classes.confirm);\n                        $element.addClass('fubu-confirm');\n\n                        $scope.showDefault = false;\n                        $scope.showConfirm = true;\n                        $scope.showWorking = false;\n                        $scope.showSuccess = false;\n                        $scope.showError = false;\n                    };\n\n                    this.setWorking = function() {\n                        $element[0].blur();\n\n                        $scope.fubu.state = 'working';\n\n                        $element.removeClass(options.classes.default);\n                        $element.removeClass('fubu-default');\n                        $element.removeClass(options.classes.confirm);\n                        $element.removeClass('fubu-confirm');\n                        $element.removeClass(options.classes.success);\n                        $element.removeClass('fubu-success');\n                        $element.removeClass(options.classes.error);\n                        $element.removeClass('fubu-error');\n\n                        $element.addClass(options.classes.working);\n                        $element.addClass('fubu-working');\n\n                        $scope.showDefault = false;\n                        $scope.showConfirm = false;\n                        $scope.showWorking = true;\n                        $scope.showSuccess = false;\n                        $scope.showError = false;\n                    };\n\n                    this.setSuccess = function() {\n                        $element[0].blur();\n\n                        $scope.fubu.state = 'success';\n\n                        $element.removeClass(options.classes.default);\n                        $element.removeClass('fubu-default');\n                        $element.removeClass(options.classes.confirm);\n                        $element.removeClass('fubu-confirm');\n                        $element.removeClass(options.classes.working);\n                        $element.removeClass('fubu-working');\n                        $element.removeClass(options.classes.error);\n                        $element.removeClass('fubu-error');\n\n                        $element.addClass(options.classes.success);\n                        $element.addClass('fubu-success');\n\n                        $scope.showDefault = false;\n                        $scope.showConfirm = false;\n                        $scope.showWorking = false;\n                        $scope.showSuccess = true;\n                        $scope.showError = false;\n                    };\n\n                    this.setError = function() {\n                        $element[0].blur();\n\n                        $scope.fubu.state = 'error';\n\n                        $element.removeClass(options.classes.default);\n                        $element.removeClass('fubu-default');\n                        $element.removeClass(options.classes.confirm);\n                        $element.removeClass('fubu-confirm');\n                        $element.removeClass(options.classes.working);\n                        $element.removeClass('fubu-working');\n                        $element.removeClass(options.classes.success);\n                        $element.removeClass('fubu-success');\n\n                        $element.addClass(options.classes.error);\n                        $element.addClass('fubu-error');\n\n                        $scope.showDefault = false;\n                        $scope.showConfirm = false;\n                        $scope.showWorking = false;\n                        $scope.showSuccess = false;\n                        $scope.showError = true;\n                    };\n                }\n\n                return FunkyButtonStateHelper;\n            }\n        ]\n    );\n})();\n"],"sourceRoot":"/source/"}